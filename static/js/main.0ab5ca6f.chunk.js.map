{"version":3,"sources":["components/Navigation/Navigation.jsx","services/movies-api.js","components/MovieList/MovieList.jsx","pages/HomePage.jsx","components/SearchForm/SearchForm.jsx","pages/MoviePage.jsx","components/Movie/Movie.jsx","components/CastMovies/CastItem/CastItem.jsx","components/CastMovies/CastMovies.jsx","pages/Cast.jsx","components/ReviewMovies/ReviewMovies.jsx","pages/Review.jsx","pages/MovieDetailPage.jsx","pages/NotFound.jsx","components/App.jsx","index.js"],"names":["articleStyle","color","Navigation","to","exact","activeStyle","KEY_API","fetchSearchedMovies","query","SEARCH_URL","axios","get","then","response","data","withRouter","items","location","map","item","key","id","pathname","state","from","title","HomePage","HOME_URL","moviesAPI","setState","results","this","Component","SearchForm","props","value","handlseSubmit","e","preventDefault","onChange","handleChange","target","onSubmit","type","defaultProps","getMovieFromLocation","queryString","parse","search","MoviePage","handleCategoryChange","history","push","movie","prevProps","prevMoviesSearch","nextMoviesSearch","qsMovie","length","Movie","onClick","movies","src","link","alt","style","width","height","overview","genres","name","CastItem","character","CastMovies","cast","mapper","profile_path","Cast","ACTORS_URL","match","params","mapperFn","ReviewMovies","author","content","Review","REVIEWS_URL","MovieDetailPage","handleGoBack","ALL_MOVIE_INFO","movieItem","poster_path","path","component","NotFound","textAlign","role","aria-label","containerStyle","maxWidth","marginLeft","marginRight","padding","App","ReactDOM","render","basename","document","getElementById"],"mappings":"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","file":"static/js/main.0ab5ca6f.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst articleStyle = {\n  color: 'palevioletred',\n};\n\nconst Navigation = () => (\n  <ul>\n    <li>\n      <NavLink to=\"/\" exact activeStyle={articleStyle}>\n        Home\n      </NavLink>\n    </li>\n    <li>\n      <NavLink to=\"/movies\" activeStyle={articleStyle}>\n        Movies\n      </NavLink>\n    </li>\n  </ul>\n);\n\nexport default Navigation;\n","import axios from 'axios';\n\nconst KEY_API = '81fd4871d370f3527eeb90ebea46cab5';\n\nexport const fetchPopularMovies = () => {\n  const HOME_URL = `https://api.themoviedb.org/3/trending/movie/day?api_key=${KEY_API}`;\n  return axios.get(HOME_URL).then(response => response.data);\n};\n\nexport const fetchSearchedMovies = query => {\n  const SEARCH_URL = `https://api.themoviedb.org/3/search/movie?api_key=${KEY_API}&query=${query}`;\n  return axios.get(SEARCH_URL).then(response => response.data);\n};\n\nexport const fetchMovieInfo = id => {\n  const ALL_MOVIE_INFO = `https://api.themoviedb.org/3/movie/${id}?api_key=${KEY_API}`;\n  return axios.get(ALL_MOVIE_INFO).then(response => response.data);\n};\n\nexport const fetchCast = id => {\n  const ACTORS_URL = `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${KEY_API}`;\n  return axios.get(ACTORS_URL).then(response => response.data);\n};\n\nexport const fetchReviews = id => {\n  const REVIEWS_URL = `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${KEY_API}`;\n  return axios.get(REVIEWS_URL);\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, withRouter } from 'react-router-dom';\n\nconst MovieList = ({ items, location }) => (\n  <ul>\n    {items.map(item => (\n      <li key={item.id}>\n        <Link\n          to={{\n            pathname: `/movies/${item.id}`,\n            state: { from: location },\n          }}\n        >\n          {item.title}\n        </Link>\n      </li>\n    ))}\n  </ul>\n);\n\nMovieList.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.shape()).isRequired,\n  location: PropTypes.shape().isRequired,\n};\n\nexport default withRouter(MovieList);\n","import React, { Component } from 'react';\nimport * as moviesAPI from '../services/movies-api';\nimport MovieList from '../components/MovieList/MovieList';\n\nclass HomePage extends Component {\n  state = { items: [] };\n\n  componentDidMount() {\n    moviesAPI\n      .fetchPopularMovies()\n      .then(items => this.setState({ items: items.results }));\n  }\n\n  render() {\n    const { items } = this.state;\n    return (\n      <div>\n        <h1>Trending today</h1>\n        <MovieList items={items} />\n      </div>\n    );\n  }\n}\n\nexport default HomePage;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass SearchForm extends Component {\n  state = { query: this.props.value || '' };\n\n  static defaultProps = {\n    value: '',\n  };\n\n  static propTypes = {\n    value: PropTypes.string,\n    onChange: PropTypes.func.isRequired,\n  };\n\n  handlseSubmit = e => {\n    const { query } = this.state;\n    e.preventDefault();\n    this.setState({ query: '' });\n    this.props.onChange(query);\n  };\n\n  handleChange = e => {\n    this.setState({\n      query: e.target.value,\n    });\n  };\n\n  render() {\n    const { query } = this.state;\n    return (\n      <form onSubmit={this.handlseSubmit}>\n        <input type=\"text\" value={query} onChange={this.handleChange} />\n        <button type=\"submit\">Search</button>\n      </form>\n    );\n  }\n}\n\nexport default SearchForm;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport queryString from 'query-string';\nimport SearchForm from '../components/SearchForm/SearchForm';\nimport MovieList from '../components/MovieList/MovieList';\nimport * as moviesAPI from '../services/movies-api';\n\nconst getMovieFromLocation = location =>\n  queryString.parse(location.search).query;\n\nclass MoviePage extends Component {\n  state = { items: [] };\n\n  static propTypes = {\n    location: PropTypes.shape().isRequired,\n    history: PropTypes.shape().isRequired,\n  };\n\n  componentDidMount() {\n    const { location } = this.props;\n    const movie = getMovieFromLocation(location);\n\n    moviesAPI\n      .fetchSearchedMovies(movie)\n      .then(items => this.setState({ items: items.results }));\n  }\n\n  componentDidUpdate(prevProps) {\n    const { location } = this.props;\n\n    const prevMoviesSearch = getMovieFromLocation(prevProps.location);\n    const nextMoviesSearch = getMovieFromLocation(location);\n\n    if (prevMoviesSearch !== nextMoviesSearch) {\n      moviesAPI\n        .fetchSearchedMovies(nextMoviesSearch)\n        .then(items => this.setState({ items: items.results }));\n    }\n  }\n\n  handleCategoryChange = query => {\n    const { history, location } = this.props;\n\n    return history.push(\n      query !== ''\n        ? { ...location, search: `query=${query}` }\n        : { ...location, search: '' },\n    );\n  };\n\n  render() {\n    const { items } = this.state;\n    const { location } = this.props;\n    const qsMovie = getMovieFromLocation(location);\n    return (\n      <div>\n        <SearchForm onChange={this.handleCategoryChange} value={qsMovie} />\n        {items.length > 0 && <MovieList items={items} />}\n      </div>\n    );\n  }\n}\n\nexport default MoviePage;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst Movie = ({ onClick, movies }) => (\n  <div>\n    {movies.map(movie => (\n      <div key={movie.id}>\n        <button type=\"button\" onClick={onClick}>\n          Go back\n        </button>\n        <div>\n          <img\n            src={\n              movie.link !== null\n                ? `http://image.tmdb.org/t/p/original${movie.link}`\n                : 'http://image.tmdb.org/t/p/original/zUqyn3aQXTzeP1n8yd8Udt1twYA.jpg'\n            }\n            alt=\"\"\n            style={{ width: '400px', height: '500px' }}\n          />\n          <h1>{movie.title}</h1>\n          <p>{movie.overview}</p>\n          {movie.genres.map(name => (\n            <p key={name.id}>{name.name}</p>\n          ))}\n        </div>\n        <div>\n          <ul>\n            <li>\n              <Link to={`/movies/${movie.id}/cast`}>Cast</Link>\n            </li>\n            <li>\n              <Link to={`/movies/${movie.id}/reviews`}>Review</Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    ))}\n  </div>\n\n  // <div>\n  // <button type=\"button\" onClick={onClick}>\n  //   Go back\n  // </button>\n  // <div>\n  //   <img\n  //     src={\n  //       movie.poster_path !== null\n  //         ? `http://image.tmdb.org/t/p/original${movie.poster_path}`\n  //         : 'http://image.tmdb.org/t/p/original/zUqyn3aQXTzeP1n8yd8Udt1twYA.jpg'\n  //     }\n  //     alt=\"\"\n  //     style={{ width: '400px', height: '500px' }}\n  //   />\n  //   <h1>{movie.title}</h1>\n  //   <p>{movie.overview}</p>\n  //   {movie.genres.map(name => (\n  //     <p key={name.id}>{name.name}</p>\n  //   ))}\n  // </div>\n  // <div>\n  //   <ul>\n  //     <li>\n  //       <Link to={`/movies/${movie.id}/cast`}>Cast</Link>\n  //     </li>\n  //     <li>\n  //       <Link to={`/movies/${movie.id}/reviews`}>Review</Link>\n  //     </li>\n  //   </ul>\n  // </div>\n  // </div>\n);\n\nMovie.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      link: PropTypes.string.isRequired,\n      title: PropTypes.string.isRequired,\n      genres: PropTypes.arrayOf(\n        PropTypes.shape({\n          id: PropTypes.number.isRequired,\n          name: PropTypes.string.isRequired,\n        }),\n      ).isRequired,\n      overview: PropTypes.string.isRequired,\n      id: PropTypes.number.isRequired,\n    }),\n  ).isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default Movie;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst CastItem = ({ link, name, character, alt }) => (\n  <div>\n    <img\n      src={\n        link === null\n          ? 'http://image.tmdb.org/t/p/original/zUqyn3aQXTzeP1n8yd8Udt1twYA.jpg'\n          : `http://image.tmdb.org/t/p/original${link}`\n      }\n      alt={alt}\n      style={{ width: '185px', height: '200px' }}\n    />\n    <p>{name}</p>\n    <p>{character}</p>\n  </div>\n);\n\nCastItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  character: PropTypes.string.isRequired,\n  link: PropTypes.string,\n  alt: PropTypes.string,\n};\n\nCastItem.defaultProps = {\n  link: 'http://image.tmdb.org/t/p/original/zUqyn3aQXTzeP1n8yd8Udt1twYA.jpg',\n  alt: 'cast_image',\n};\n\nexport default CastItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CastItem from './CastItem/CastItem';\n\nconst CastMovies = ({ cast }) => (\n  <div>\n    {cast.map(item => (\n      <div key={item.id}>\n        <CastItem {...item} />\n      </div>\n    ))}\n  </div>\n);\n\nCastMovies.propTypes = {\n  cast: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n      character: PropTypes.string.isRequired,\n      link: PropTypes.string,\n    }),\n  ).isRequired,\n};\n\nexport default CastMovies;\n","import React, { Component } from 'react';\nimport CastMovies from '../components/CastMovies/CastMovies';\nimport * as moviesAPI from '../services/movies-api';\n\nconst getIdFromProps = props => props.match.params.id;\n\nconst mapper = cast => {\n  return cast.map(({ profile_path: link, ...props }) => ({\n    link,\n    ...props,\n  }));\n};\n\nclass Cast extends Component {\n  state = { cast: [] };\n\n  componentDidMount() {\n    const id = getIdFromProps(this.props);\n    moviesAPI.fetchCast(id).then(data => this.setState({ cast: data.cast }));\n  }\n\n  render() {\n    const { cast } = this.state;\n    const mapperFn = mapper(cast);\n    return (\n      <div>\n        <CastMovies cast={mapperFn} />\n      </div>\n    );\n  }\n}\n\nexport default Cast;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ReviewMovies = ({ results }) => (\n  <div>\n    {results.length === 0 ? (\n      <p>We dont have reviews for this movie</p>\n    ) : (\n      results.map(({ id, author, content }) => (\n        <div key={id}>\n          <p>{author}</p>\n          <p>{content}</p>\n        </div>\n      ))\n    )}\n  </div>\n);\n\nReviewMovies.propTypes = {\n  results: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      author: PropTypes.string.isRequired,\n      content: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n};\n\nexport default ReviewMovies;\n","import React, { Component } from 'react';\nimport * as moviesAPI from '../services/movies-api';\nimport ReviewMovies from '../components/ReviewMovies/ReviewMovies';\n\nconst getIdFromProps = props => props.match.params.id;\n\nclass Review extends Component {\n  state = { results: [] };\n\n  componentDidMount() {\n    const id = getIdFromProps(this.props);\n    moviesAPI\n      .fetchReviews(id)\n      .then(data => this.setState({ results: data.data.results }));\n  }\n\n  render() {\n    const { results } = this.state;\n    return (\n      <div>\n        {results.length === 0 ? (\n          <p>We dont have any reviews for this movie</p>\n        ) : (\n          <ReviewMovies results={results} />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Review;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Route } from 'react-router-dom';\nimport Movie from '../components/Movie/Movie';\nimport Cast from './Cast';\nimport Review from './Review';\nimport * as moviesAPI from '../services/movies-api';\n\nconst getIdFromProps = props => props.match.params.id;\n\nconst mapper = movie => {\n  return movie.map(({ poster_path: link, ...props }) => ({\n    link,\n    ...props,\n  }));\n};\n\nclass MovieDetailPage extends Component {\n  state = { movie: [] };\n\n  static propTypes = {\n    location: PropTypes.shape().isRequired,\n    history: PropTypes.shape().isRequired,\n  };\n\n  componentDidMount() {\n    const id = getIdFromProps(this.props);\n    moviesAPI\n      .fetchMovieInfo(id)\n      .then(movie => this.setState({ movie: [{ ...movie }] }));\n  }\n\n  handleGoBack = () => {\n    const { history, location } = this.props;\n\n    return history.push(location.state ? location.state.from : '/');\n  };\n\n  render() {\n    const { movie } = this.state;\n    const movieItem = mapper(movie);\n    return (\n      <div>\n        {movie && <Movie onClick={this.handleGoBack} movies={movieItem} />}\n        <Route path=\"/movies/:id/cast\" component={Cast} />\n        <Route path=\"/movies/:id/reviews\" component={Review} />\n      </div>\n    );\n  }\n}\n\nexport default MovieDetailPage;\n","import React from 'react';\n\nconst NotFound = () => (\n  <h1 style={{ textAlign: 'center' }}>\n    Sorry, page not found\n    <span role=\"img\" aria-label=\"emoji\">\n      🤔\n    </span>\n  </h1>\n);\n\nexport default NotFound;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Navigation from './Navigation/Navigation';\nimport HomePage from '../pages/HomePage';\nimport MoviePage from '../pages/MoviePage';\nimport MovieDetailPage from '../pages/MovieDetailPage';\nimport NotFound from '../pages/NotFound';\n\nconst containerStyle = {\n  maxWidth: 1170,\n  marginLeft: 'auto',\n  marginRight: 'auto',\n  padding: '0 16px',\n};\n\nconst App = () => (\n  <div style={containerStyle}>\n    <Navigation />\n    <Switch>\n      <Route path=\"/\" exact component={HomePage} />\n      <Route path=\"/movies/:id\" component={MovieDetailPage} />\n      <Route path=\"/movies\" component={MoviePage} />\n      <Route component={NotFound} />\n    </Switch>\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter, Route } from 'react-router-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <HashRouter basename=\"/\">\n    <Route component={App} />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}